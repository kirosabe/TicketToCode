@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using TicketToCode.Core.Models;
@page "/booking/confirmation"
@inject HttpClient Http
@inject BookingState BookingState

<PageTitle>Confirmation</PageTitle>

@if (BookingState.CurrentBooking is not null)
{


    <h1>Thank you for your booking @BookingState.CurrentBooking.FirstName @BookingState.CurrentBooking.LastName!</h1>
    <p>See details below:</p>
    <p><strong>Email:</strong> @BookingState.CurrentBooking.Email</p>
    <p><strong>Phone:</strong> @BookingState.CurrentBooking.Phone</p>
    <p><strong>Event:</strong> @GetEventName(BookingState.CurrentBooking.EventId)</p>
    <p><strong>Number of tickets:</strong> @BookingState.CurrentBooking.Tickets</p>
}
else
{
    <p>No booking information found.</p>
}

@code {
    // Get event name from API
    private List<Event> events = new();
    private string GetEventName(int eventId)
    {
        var found = events.FirstOrDefault(e => e.Id == eventId);
        return found?.Name ?? "Unknown event";
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("https://localhost:7206/events");
            if (response.IsSuccessStatusCode)
            {
                events = await response.Content.ReadFromJsonAsync<List<Event>>() ?? new List<Event>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Failed to fetch events: {ex.Message}");
        }
    }
}


