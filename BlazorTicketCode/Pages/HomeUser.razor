@page "/user/home"
@attribute [Authorize(Roles = "User")]
@inject HttpClient Http
@inject AuthStateService Auth

<h3>Your Bookings</h3>

@if (bookings is null)
{
    <p> Loading...</p>
}
else if (!bookings.Any())
{
    <p>You have no bookings yet.</p>
}
else
{
    <ul class="list-group">
        @foreach (var booking in bookings)
        {
            <li class="list-group-item">
                <strong>@booking.EventName</strong> <br />
                Tickets: @booking.Tickets<br />
                Name: @booking.FirstName @booking.LastName<br />
                Date: @(booking.Start.ToString("yyyy-MM-dd HH:mm") ?? "No date available")<br />
            </li>
        }
    </ul>
}

@code {
    private List<UserBookingDto>? bookings;

    protected override async Task OnInitializedAsync()
    {
        var username = await Auth.GetUsername();
        if (!string.IsNullOrEmpty(username))
        {
            bookings = await Http.GetFromJsonAsync<List<UserBookingDto>>($"users/{username}/bookings");
        }
    }
    public class UserBookingDto
    {
        public string? EventName { get; set; }
        public int Tickets { get; set; }
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public DateTime Start { get; set; }
    }

    public enum PaymentMethod
    {
        CreditCard = 0,
        Swish,
        Invoice
    }
}